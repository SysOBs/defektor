/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package pt.uc.sob.defektor.server.api;

import pt.uc.sob.defektor.server.model.SystemConfig;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-06-17T12:09:39.110699252+01:00[Europe/Lisbon]")

@Validated
@Api(value = "system", description = "the system API")
public interface SystemApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /system/config : list system configs
     * List available system configs
     *
     * @return list of system configs (status code 200)
     */
    @ApiOperation(value = "list system configs", nickname = "systemConfigList", notes = "List available system configs", response = SystemConfig.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "list of system configs", response = SystemConfig.class, responseContainer = "List") })
    @RequestMapping(value = "/system/config",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<SystemConfig>> systemConfigList() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"configs\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"systemType\" : { \"name\" : \"kubernetes\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /system/config : Submit system and its configurations
     * Submits a system type and its configuration
     *
     * @param systemConfig Configure system (required)
     * @return submits a system type (status code 200)
     */
    @ApiOperation(value = "Submit system and its configurations", nickname = "systemTypeConfigure", notes = "Submits a system type and its configuration", response = SystemConfig.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "submits a system type", response = SystemConfig.class) })
    @RequestMapping(value = "/system/config",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<SystemConfig> systemTypeConfigure(@ApiParam(value = "Configure system" ,required=true )  @Valid @RequestBody SystemConfig systemConfig) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"configs\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"systemType\" : { \"name\" : \"kubernetes\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
